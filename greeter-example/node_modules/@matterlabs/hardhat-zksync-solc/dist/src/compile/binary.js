"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compileWithBinary = void 0;
const child_process_1 = require("child_process");
async function compileWithBinary(input, config, solcPath) {
    const output = await new Promise((resolve, reject) => {
        var _a;
        const process = (0, child_process_1.exec)(`${config.settings.compilerPath} --standard-json --solc ${solcPath} ${((_a = config.settings.optimizer) === null || _a === void 0 ? void 0 : _a.enabled) ? '--optimize' : ''}`, {
            maxBuffer: 1024 * 1024 * 500,
        }, (err, stdout, _stderr) => {
            if (err !== null) {
                return reject(err);
            }
            resolve(stdout);
        });
        process.stdin.write(JSON.stringify(input));
        process.stdin.end();
    });
    return JSON.parse(output);
}
exports.compileWithBinary = compileWithBinary;
//# sourceMappingURL=binary.js.map