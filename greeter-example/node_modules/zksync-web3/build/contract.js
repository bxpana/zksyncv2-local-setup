"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractFactory = exports.Contract = void 0;
const ethers_1 = require("ethers");
const calldata_1 = require("./calldata");
var ethers_2 = require("ethers");
Object.defineProperty(exports, "Contract", { enumerable: true, get: function () { return ethers_2.Contract; } });
class ContractFactory extends ethers_1.ethers.ContractFactory {
    constructor(abi, bytecode, signer) {
        super(abi, bytecode, signer);
    }
    getDeployTransaction(...args) {
        var _a, _b;
        var _c;
        const txRequest = super.getDeployTransaction(...args);
        if (this.interface.deploy.inputs.length + 1 == args.length) {
            // pop out the overrides
            args.pop();
        }
        const encodedArgs = ethers_1.utils.arrayify(this.interface.encodeDeploy(args));
        const input = [];
        for (let i = 0; i < encodedArgs.length; i += 32) {
            input.push(ethers_1.utils.hexlify(encodedArgs.slice(i, i + 32)));
        }
        const calldata = (0, calldata_1.calldataBytes)({
            constructorCall: true,
            input
        });
        txRequest.to = ethers_1.ethers.constants.AddressZero;
        txRequest.data = ethers_1.utils.hexConcat([ethers_1.utils.keccak256(this.bytecode), calldata]);
        (_a = txRequest.customData) !== null && _a !== void 0 ? _a : (txRequest.customData = {});
        (_b = (_c = txRequest.customData).factoryDeps) !== null && _b !== void 0 ? _b : (_c.factoryDeps = []);
        txRequest.customData.factoryDeps.push(this.bytecode);
        return txRequest;
    }
}
exports.ContractFactory = ContractFactory;
